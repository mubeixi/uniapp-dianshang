// 统一方法
			async self_orderPay(is_forward){

				let _self = this;
				let payConf = {};

				//不是跳转的
				if(!is_forward){
					if(this.need_invoice == 1 && this.invoice_info == '') {
						uni.showToast({
							title: '发票信息不能为空',
							icon: 'none'
						});
						return;
					};
					payConf = {
						Order_ID: this.Order_ID,
						pay_type: this.pay_type,
						pay_money: this.orderInfo.Order_Fyepay, // 剩余支付的钱
						use_money: this.user_money , // 使用的余额
						user_pay_password: this.user_pay_password, //余额支付密码
						need_invoice: this.need_invoice,
						invoice_info: this.invoice_info,
						order_remark: this.order_remark
					};
					// 用户选择余额支付
					if(this.pay_type == 'remainder_pay') {
						orderPay(payConf,{errtip:false}).then(res=>{
							console.log(res)
							if(res.errorCode == 0) {
								this.paySuccessCall();
							}
						},err=>{
							uni.showModal({
								title: '提示',
								content: err.msg,
								showCancel: false
							});
						}).catch(e=>{
							console.log(e)
						});
						return;
					}



				}

				if(this.pay_type === 'unionpay'){
					error('即将上线')
					return;
				}

				if(this.pay_type === 'ali_app'){



				}


				//下面都是微信

				//需要格外有一个code

				// #ifdef H5

				// 微信h5
				if(this.pay_type === 'wx_h5'){
					payConf.pay_type = 'wx_h5';
				}

				//阿里h5
				if(this.pay_type === 'alipay'){

					payConf.pay_type = 'alipay';
				}

				//公众号需要code
				if(this.pay_type === 'wx_mp'){

					console.log('选择了微信支付的')

					if (!isWeiXin()) {
						this.$error('请在微信内打开')
						return;
					}
					let isHasCode = this.code || GetQueryByString('code');

					if (isHasCode) {
						// payConf.code = isHasCode;
						//拿到之前的配置
						payConf = { ...ls.get('temp_order_info'),
							code: isHasCode,
							pay_type: 'wx_mp'
						}

					} else {
						//存上临时的数据
						ls.set('temp_order_info', payConf);
						//去掉转吧
						this.$_init_wxpay_env();
						return;
					}
				}

				// #endif

				// #ifdef MP-TOUTIAO

				// #endif

				// #ifdef MP-WEIXIN

				payConf.pay_type = 'wx_lp';
				console.log(payConf)
				await new Promise((resolve) => {
					uni.login({
						success: function (loginRes) {
							console.log(loginRes);
							payConf.code = loginRes.code
							resolve()
						}
					});
				})
				// #endif


				console.log('payConf',payConf)
				orderPay(payConf).then(res => {
					console.log(res);


					// #ifdef APP-PLUS


					if(this.pay_type === 'ali_app'){

						let provider = 'alipay';
						let orderInfo = res.data.arg;
						console.log('支付宝参数',orderInfo)

						uni.requestPayment({
							provider,
							orderInfo, //微信、支付宝订单数据
							success: function (res) {
								_self.paySuccessCall(res)
								console.log('success:' + JSON.stringify(res));
							},
							fail: function (err) {
								console.log('fail:' + JSON.stringify(err));
								uni.showModal({
									title:'支付错误',
									content:JSON.stringify(err)
								})
							}
						});

						return;

					}
					// #endif


					// #ifdef H5

					// 微信h5
					if(this.pay_type === 'wx_h5'){

						let redirect_url = res.data.mweb_url+'&redirect_url='+urlencode(location.origin+'/fre/pages/order/order?index=2');
						location.href = redirect_url;
						return;
					}

					//阿里h5
					if(this.pay_type === 'alipay'){

						//公众号麻烦一点
						if(isWeiXin()){
							let users_id = ls.get('users_id');


							let fromurl = res.data.arg;//encodeURIComponent(res.data.arg);
							let origin = location.origin;



							fromurl = fromurl.replace(/openapi.alipay.com/,'wangjing666')
							console.log(fromurl);

							let str = origin+`/fre/pages/pay/wx/wx?users_id=${users_id}&formurl=`+encodeURIComponent(fromurl);
							let url = str;


							uni.navigateTo({
								url:`/pages/pay/wx/wx?users_id=${users_id}&formurl=`+encodeURIComponent(fromurl)
							})

							console.log(url)
							//这样就避免了users_id瞎跳的机制
							//location.href = url;
						}else{
							document.write(res.data.arg)
							document.getElementById('alipaysubmit').submit()
						}


						return;

					}


					let {
						timestamp,
						nonceStr,
						signType,
						paySign
					} = res.data;

					//直接支付
					_self.WX_JSSDK_INIT(_self).then((wxEnv) => {

						//关键字？？package
						wxEnv.chooseWXPay({
							timestamp,
							nonceStr,
							package: res.data.package,
							signType,
							paySign,
							success: function(res) {
								// 支付成功后的回调函数
								_self.paySuccessCall(res)
							}
						});

					}).catch((e) => {
						console.log('支付失败')
					})

					return;

					// #endif


					let provider = 'wxpay';
					let orderInfo = {}

					// #ifdef MP-WEIXIN || MP-BAIDU || MP-TOUTIAO || MP-ALIPAY


					// #endif

					// #ifdef MP-TOUTIAO

					provider = 'wxpay';
					orderInfo = res.data
					orderInfo.out_order_no = (orderInfo.Order_ID+'')
					orderInfo.timestamp +='';//string
					orderInfo.uid += '';
					orderInfo.trade_time +='';
					orderInfo.valid_time +='';

					//
					//orderInfo.risk_info = JSON.stringify({ip: '127.0.0.1', device_id: '485737374363263'});
					//
					//
					// orderInfo.params = ''
					// orderInfo.pay_type = ''
					// orderInfo.pay_channel = ''
					// orderInfo.method = ''
					// orderInfo.trade_no = ''


					delete orderInfo.Order_ID

					//固定值：1（拉起小程序收银台）开发者如果不希望使用头条小程序收银台，service设置为3/4时，可以直接拉起微信/支付宝进行支付：service=3： 微信API支付，不拉起小程序收银台；service=4： 支付宝API支付，不拉起小程序收银台。其中service=3、4，仅在1.35.0.1+基础库(头条743+)支持
					//console.log(orderInfo)



					uni.requestPayment({
						provider,

						service:1,//
						orderInfo, //微信、支付宝订单数据
						success: function (res) {
							_self.paySuccessCall(res)
							console.log('success:' + JSON.stringify(res));
						},
						fail: function (err) {
							console.log('fail:' + JSON.stringify(err));
							uni.showModal({
								title:'支付错误',
								content:JSON.stringify(err)
							})
						}
					});
					// #endif

					// #ifdef MP-WEIXIN

					provider = 'wxpay';
					orderInfo = res.data
					delete orderInfo.timestamp

					console.log(provider,orderInfo,'支付数据222222222222222222');
					let prepay_id = orderInfo.package.split('=')[1];
					uni.requestPayment({
					...orderInfo,
						provider,
						success: function (res) {
							add_template_code({
								code: prepay_id,
								times: 3
							})
							console.log('success:' + JSON.stringify(res));
							_self.paySuccessCall(res)
						},
						fail: function (err) {
							console.log('fail:' + JSON.stringify(err));
							_self.payFailCall(err);
						}
					});
					// #endif

					// #ifdef APP-PLUS
					provider = 'wxpay';
					orderInfo = res.data
					console.log(provider,orderInfo,'支付数据222222222222222222');

					uni.requestPayment({
						provider,
						orderInfo, //微信、支付宝订单数据
						success: function (res) {
							_self.paySuccessCall(res)
							console.log('success:' + JSON.stringify(res));
						},
						fail: function (err) {
							console.log('fail:' + JSON.stringify(err));
							_self.payFailCall(err);
						}
					});
					// #endif

				},err=>{
					uni.showModal({
						title:'提示',
						content:'获取支付参数失败:'+err.msg
					})
				}).catch(e=>{

				})
			},

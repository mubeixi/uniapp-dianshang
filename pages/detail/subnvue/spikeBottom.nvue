<template>
    <div class="goods-bottom">
        <div class="leftss">
            <div class="first" @click="toHome">
                <image class='img' src="/static/detail/home.png"></image>
                <text class="txt">首页</text>
            </div>
            <div class="first" @click="collectFn">
                <image class='img' v-if="isCollected" src="/static/detail/favorite-a.png"></image>
                <image class='img' v-else src="/static/detail/favorite.png"></image>
                <text class="txt">收藏</text>
            </div>
            <div class="first" @click="kefu">
                <image class='img' src="/static/detail/kefu.png"></image>
                <text class="txt">客服</text>
            </div>
        </div>
        <div class="rightss">

			<text v-if="!isKai"  class="dan bTitle" @click="addCart">零售价购</text>
			<text v-if="!isKai"  class="tuan bTitle" @click="directBuy">立即预约</text>

           <text class="all" @click="lingqu"  v-if="isKai">
               立即抢购
            </text>
        </div>
    </div>
</template>


<script>
    export default {
        data() {
            return {
                isCollected:false,
                recieve:false,
                isVirtual:false,
                canSubmit:false,
				isKai:true,
				detail:''
            };
        },
        props: {
        },
		beforeDestroy() {
			uni.$off('spike_bottom_setval')
		},
        created(){
            const vm = this;
            uni.$on('spike_bottom_setval', (data) => {
                for(var key in data){
                    vm[key] = data[key]
                }
                // vm.title = data.title;
                // vm.content = data.content;
            })
        },
        methods: {
            kefu(){
                uni.$emit('kefu',{});
            },
            collectFn(){
                uni.$emit('collectSpike',{detail:this.detail});
            },
            toHome(){
              uni.switchTab({
                  url:'/pages/index/index'
              })
            },
            // collect() {
            //     //this.$emit('collect');
            // },
            addCart() {
                // if (!this.$fun.checkIsLogin(1, 1)) {
                //     return;
                // }
                uni.$emit('cartSpike',{});
            },
            directBuy() {

                // if (!this.$fun.checkIsLogin(1, 1)) {
                //     return;
                // }
                uni.$emit('directSpike');
            },
            lingqu() {

                uni.$emit('spikeBuy',{detail:this.detail});
            }
        }
    }
</script>

<style>
.goods-bottom {
    height: 98upx;
    width: 750upx;
    background-color: #F8F8F8;
    flex-direction:row;
}
.leftss{
    height: 98upx;
    flex:1;
    flex-direction:row;
}
.rightss {
    flex-direction:row;
    height: 98upx;
    flex:1;
	align-items: center;
}

.first {
    height: 98upx;
    justify-content: center;
    align-items: center;
    flex:1;
    /* flex-direction:row; */
}
.img {
    width: 38upx;
    height: 38upx;
}
.txt {
    font-size: 24upx;
    margin-left: 4upx;
	margin-top: 5px;
}

.bTitle {
    color: #fff;
    text-align: center;
    line-height: 98upx;
    font-size: 28upx;
}
.dan {
    flex:1;
    background-color: #FA6B27 !important;
}

.tuan {
    flex:1;
    background-color: #F43131 !important;
}
.bF {
    font-size: 24upx;
}

.bS {
    font-size: 32upx;
}

.danRight {
    font-size: 26upx;
}
.all {
    /* height: 100%;
	flex: 1;
	flex-direction: row;
    align-items: center;
	justify-content: center; */
	flex: 1;
    color: #fff !important;
	background-color: #F43131 !important;
}



</style>
